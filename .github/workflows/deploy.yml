name: Deploy to GitHub Pages

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '16'

      - name: Create env file
        run: |
          echo "FIREBASE_API_KEY=${{ secrets.FIREBASE_API_KEY }}" >> .env
          echo "FIREBASE_AUTH_DOMAIN=${{ secrets.FIREBASE_AUTH_DOMAIN }}" >> .env
          echo "FIREBASE_PROJECT_ID=${{ secrets.FIREBASE_PROJECT_ID }}" >> .env
          echo "FIREBASE_DATABASE_URL=${{ secrets.FIREBASE_DATABASE_URL }}" >> .env
          echo "FIREBASE_STORAGE_BUCKET=${{ secrets.FIREBASE_STORAGE_BUCKET }}" >> .env
          echo "FIREBASE_MESSAGING_SENDER_ID=${{ secrets.FIREBASE_MESSAGING_SENDER_ID }}" >> .env
          echo "FIREBASE_APP_ID=${{ secrets.FIREBASE_APP_ID }}" >> .env
          echo "JOSHUA_PROJECT_API_KEY=${{ secrets.JOSHUA_PROJECT_API_KEY }}" >> .env

      - name: Install Dependencies
        run: |
          npm init -y
          npm install dotenv
          npm install -g firebase-tools

      - name: Process Environment Variables
        run: |
          # Create a script to replace environment variables
          echo "const fs = require('fs');
          const path = require('path');
          require('dotenv').config();

          function replaceEnvVars(filePath) {
            let content = fs.readFileSync(filePath, 'utf8');
            Object.keys(process.env).forEach(key => {
              const regex = new RegExp(`process\\.env\\.${key}`, 'g');
              content = content.replace(regex, `'${process.env[key]}'`);
            });
            fs.writeFileSync(filePath, content);
          }

          replaceEnvVars('src/js/firebaseConfig.js');" > process-env.js
          
          node process-env.js

      - name: Prepare for deployment
        run: |
          # Create deployment directory
          mkdir -p public
          
          # Copy HTML files directly to root of public
          cp src/html/*.html public/
          
          # Ensure index.html is in the root
          cp src/html/index.html public/index.html
          
          # Create directories and copy other assets
          mkdir -p public/js public/css public/data public/images
          cp -r src/js/* public/js/
          cp -r src/css/* public/css/
          cp -r data/* public/data/
          cp -r images/* public/images/

      - name: Deploy
        uses: JamesIves/github-pages-deploy-action@v4
        with:
          folder: public
          branch: gh-pages
          clean: true
